"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[849,3047],{7058:e=>{function markupTemplating(e){!function(e){function getPlaceholder(e,t){return"___"+e.toUpperCase()+t+"___"}Object.defineProperties(e.languages["markup-templating"]={},{buildPlaceholders:{value:function(t,n,a,r){if(t.language===n){var o=t.tokenStack=[];t.code=t.code.replace(a,(function(e){if("function"==typeof r&&!r(e))return e;for(var a,s=o.length;-1!==t.code.indexOf(a=getPlaceholder(n,s));)++s;return o[s]=e,a})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,n){if(t.language===n&&t.tokenStack){t.grammar=e.languages[n];var a=0,r=Object.keys(t.tokenStack);!function walkTokens(o){for(var s=0;s<o.length&&!(a>=r.length);s++){var i=o[s];if("string"==typeof i||i.content&&"string"==typeof i.content){var l=r[a],u=t.tokenStack[l],p="string"==typeof i?i:i.content,d=getPlaceholder(n,l),g=p.indexOf(d);if(g>-1){++a;var c=p.substring(0,g),k=new e.Token(n,e.tokenize(u,t.grammar),"language-"+n,u),m=p.substring(g+d.length),f=[];c&&f.push.apply(f,walkTokens([c])),f.push(k),m&&f.push.apply(f,walkTokens([m])),"string"==typeof i?o.splice.apply(o,[s,1].concat(f)):i.content=f}}else i.content&&walkTokens(i.content)}return o}(t.tokens)}}}})}(e)}e.exports=markupTemplating,markupTemplating.displayName="markupTemplating",markupTemplating.aliases=[]},6128:(e,t,n)=>{var a=n(7058);function smarty(e){e.register(a),function(e){e.languages.smarty={comment:/\{\*[\s\S]*?\*\}/,delimiter:{pattern:/^\{|\}$/i,alias:"punctuation"},string:/(["'])(?:\\.|(?!\1)[^\\\r\n])*\1/,number:/\b0x[\dA-Fa-f]+|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][-+]?\d+)?/,variable:[/\$(?!\d)\w+/,/#(?!\d)\w+#/,{pattern:/(\.|->)(?!\d)\w+/,lookbehind:!0},{pattern:/(\[)(?!\d)\w+(?=\])/,lookbehind:!0}],function:[{pattern:/(\|\s*)@?(?!\d)\w+/,lookbehind:!0},/^\/?(?!\d)\w+/,/(?!\d)\w+(?=\()/],"attr-name":{pattern:/\w+\s*=\s*(?:(?!\d)\w+)?/,inside:{variable:{pattern:/(=\s*)(?!\d)\w+/,lookbehind:!0},operator:/=/}},punctuation:[/[\[\]().,:`]|->/],operator:[/[+\-*\/%]|==?=?|[!<>]=?|&&|\|\|?/,/\bis\s+(?:not\s+)?(?:div|even|odd)(?:\s+by)?\b/,/\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\b/],keyword:/\b(?:false|off|on|no|true|yes)\b/},e.hooks.add("before-tokenize",(function(t){var n=!1;e.languages["markup-templating"].buildPlaceholders(t,"smarty",/\{\*[\s\S]*?\*\}|\{[\s\S]+?\}/g,(function(e){return"{/literal}"===e&&(n=!1),!n&&("{literal}"===e&&(n=!0),!0)}))})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"smarty")}))}(e)}e.exports=smarty,smarty.displayName="smarty",smarty.aliases=[]}}]);
//# sourceMappingURL=bundle.c9d33d61e9ee0bc6d0fa.min.js.map